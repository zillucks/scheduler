<?php

namespace App\Models;

use Illuminate\Http\Request;
use Carbon\Carbon;

class Training extends BaseModel
{
    protected $table = 'training';
    protected $appends = ['status', 'max_quote', 'location'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
	    static::creating(function ($model) {
	    	$model->slug = str_slug($model->training_name);
        });
    }

    protected function findBySlug($slug)
    {
        return $this->where('slug', $slug)->first();
    }

    public function getStatusAttribute()
    {
        return $this->training_status ? "<i class='fas fa-check text-success'></i> Aktif" : "<i class='fas fa-times text-danger'></i> Tidak Aktif";
    }

    public function getMaxQuoteAttribute()
    {
        return $this->class->max_quotes;
    }

    public function getLocationAttribute()
    {
        return "{$this->class->class_name} {$this->site->site_name}";
    }

    public function scopeFilter($query, Request $request)
    {
        if ($request->has('training_name') && !empty($request->get('training_name'))) {
            $search = strtolower($request->get('training_name'));
            $query->whereRaw('lower(training_name) like ?', '%'. $search .'%');
        }
        return $query;
    }

    public function site()
    {
        return $this->belongsTo('App\Models\Site');
    }

    public function class()
    {
        return $this->belongsTo('App\Models\Classes');
    }

    public function reservations()
    {
        return $this->hasMany('App\Models\Reservation');
    }

    public function times()
    {
        return $this->hasMany('App\Models\TrainingAvailableTime');
    }

    public function choosen_times()
    {
        return $this->hasManyThrough('App\Models\AvailableTime', 'App\Models\TrainingAvailableTime', 'training_id', 'id', 'id', 'available_time_id');
    }

    public function attendances()
    {
        return $this->hasMany('App\Models\TrainingAttendance');
    }
}
